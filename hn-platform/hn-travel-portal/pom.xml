<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>hn.travel</groupId>
		<artifactId>hn-travel</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../</relativePath>
	</parent>
	<groupId>hn.travel.portal</groupId>
	<artifactId>hn-travel-portal</artifactId>
	<packaging>war</packaging>
	<name>hn-travel-portal</name>
	<properties>
		<sourceEncoding>UTF-8</sourceEncoding>
	</properties>


	<dependencies>
		<dependency>
			<groupId>hn.travel.persist</groupId>
			<artifactId>hn-travel-persist</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>



		<!-- SPRING SECURITY begin <dependency> <groupId>org.springframework.security</groupId> 
			<artifactId>spring-security-core</artifactId> <version>3.1.4.RELEASE</version> 
			</dependency> <dependency> <groupId>org.springframework.security</groupId> 
			<artifactId>spring-security-acl</artifactId> <version>3.1.4.RELEASE</version> 
			</dependency> <dependency> <groupId>org.springframework.security</groupId> 
			<artifactId>spring-security-taglibs</artifactId> <version>3.1.4.RELEASE</version> 
			</dependency> SPRING SECURITY end -->

		<!-- WEB begin -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.5.2</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.5.2</version>
		</dependency>
		<dependency>
			<groupId>freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.8</version>
		</dependency>
		<!-- WEB end -->

		<!-- Memcached begin -->
		<dependency>
			<groupId>org.codehaus.woodstox</groupId>
			<artifactId>wstx-asl</artifactId>
			<version>3.2.7</version>
		</dependency>
		<dependency>
			<groupId>stax</groupId>
			<artifactId>stax-api</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>alisoft.xplatform.asf.cache</groupId>
			<artifactId>alisoft-xplatform-asf-cache</artifactId>
			<version>2.5.1</version>
		</dependency>
		<!-- Memcached end -->

		<!-- GENERAL UTILS begin -->

		<dependency>
			<groupId>com.octo.captcha</groupId>
			<artifactId>jcaptcha-all</artifactId>
			<version>1.0-RC6</version>
			<exclusions>
				<exclusion>
					<artifactId>spring</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>
		<!-- GENERAL UTILS end -->

		<!-- TEST begin -->
		<dependency>
			<groupId>org.springside</groupId>
			<artifactId>springside-core</artifactId>
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3.RC2</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
		</dependency>
		<!-- jetty -->
		<dependency>
			<groupId>org.eclipse.jetty.aggregate</groupId>
			<artifactId>jetty-webapp</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-jsp</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- TEST end -->
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-core</artifactId>
				<version>2.6.9</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- compiler插件, 设定JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<showWarnings>true</showWarnings>
					<encoding>UTF-8</encoding>
					<compilerArguments>
						<verbose />
						<bootclasspath>${java.home}\jre\lib\rt.jar;${java.home}\jre\lib\jce.jar</bootclasspath>
					</compilerArguments>
				</configuration>
			</plugin>

			<!-- war打包插件, 设定war包名称不带版本号 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warName>${project.artifactId}</warName>
				</configuration>
			</plugin>

			<!-- test插件, 仅测试名称为*Test的类,使用支持分组测试的surefire-junit47 driver -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<argLine>-Xmx256M</argLine>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.16</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- 增加functional test的Source目录 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-functional-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test/functional</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- cobertura插件, 设置不需要计算覆盖率的类 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<configuration>
					<instrumentation>
						<excludes>
							<exclude>**/entity/**/*.class</exclude>
							<exclude>**/*Controller.class</exclude>
						</excludes>
					</instrumentation>
				</configuration>
			</plugin>

			<!-- enforcer插件, 避免被依赖的依赖引入过期的jar�? <plugin> <groupId>org.apache.maven.plugins</groupId> 
				<artifactId>maven-enforcer-plugin</artifactId> <executions> <execution> <id>enforce-banned-dependencies</id> 
				<goals> <goal>enforce</goal> </goals> <configuration> <rules> <requireMavenVersion> 
				<version>3.0.3</version> </requireMavenVersion> <requireJavaVersion> <version>1.6</version> 
				</requireJavaVersion> <bannedDependencies> <searchTransitive>true</searchTransitive> 
				<excludes> <exclude>commons-logging</exclude> <exclude>aspectj:aspectj*</exclude> 
				<exclude>org.springframework</exclude> </excludes> <includes> <include>org.springframework:*:4.0.*</include> 
				</includes> </bannedDependencies> </rules> <fail>true</fail> </configuration> 
				</execution> </executions> </plugin> -->
			<!-- jetty插件, 设定context path与spring profile -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<configuration>
					<systemProperties>
						<systemProperty>
							<name>spring.profiles.active</name>
							<value>development</value>
						</systemProperty>
					</systemProperties>
					<useTestClasspath>true</useTestClasspath>

					<webAppConfig>
						<contextPath>/${project.artifactId}</contextPath>
					</webAppConfig>
				</configuration>
			</plugin>

			<!-- resources插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>

			<!-- install插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>

			<!-- ant插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- 执行functional test -->
		<profile>
			<id>functional-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<argLine>-Xmx256M -XX:MaxPermSize=128m</argLine>
							<includes>
								<include>**/*FT.java</include>
							</includes>
							<!-- 支持taglib tld文件查找的必要设置 -->
							<useSystemClassLoader>false</useSystemClassLoader>
							<!-- 将mvn命令行传入的selenium driver参数传入surefire的JVM -->
							<systemPropertyVariables>
								<selenium.driver>${selenium.driver}</selenium.driver>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- 执行@Category(Smoke.class)的TestCase -->
		<profile>
			<id>run-smoke</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<groups>org.springside.modules.test.category.Smoke</groups>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
</project>