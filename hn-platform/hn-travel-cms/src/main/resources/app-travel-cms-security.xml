<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">

    <http auto-config="true" access-denied-page="/accessDenied.jsp">
    	<intercept-url pattern="/static/**" filters="none"/>
    	<intercept-url pattern="/accessDenied.jsp" filters="none"/>
    	<anonymous username="Guest"/>
    	<form-login login-page="/login.jsp"
    			default-target-url="/index" always-use-default-target="true" authentication-failure-url="/login.jsp?error=true"/>
    	<logout logout-success-url="/login.jsp" invalidate-session="true"/>
    </http>
    
    <beans:bean id="userDetailsService" class="hn.travel.persist.security.service.UserInfoService">
    	<beans:property name="dataSource" ref="dataSource"/>
    	<beans:property name="queryString" value="SELECT U.id USERID,U.account ACCOUNT,U.password PASSWORD, U.nickname NICKNAME, U.status STATUS, U.mobile MOBILE, U.EMAIL EMAIL, R.name ROLENAME,R.id ROLEID FROM SYS_USER U, SYS_USER_ROLE UR,SYS_ROLE R WHERE U.id=UR.userid AND R.id=UR.roleid" />
    </beans:bean>

    <authentication-provider user-service-ref="userDetailsService">
    	<password-encoder hash="md5" />
        <!-- jdbc-user-service data-source-ref="dataSource"
        	cache-ref="userCache"
            users-by-username-query="select username,password,status as enabled from t_user where username=?"
            authorities-by-username-query="select u.username,r.name as authority from t_user u join t_user_role ur on u.id=ur.user_id join t_role r on r.id=ur.role_id where u.username=?"/-->
    </authentication-provider>
    
    <beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <beans:property name="basenames">
        	<beans:list>
        		<beans:value>org/springframework/security/messages_zh_CN</beans:value>
        	</beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean id="filterSecurityInterceptor"
        class="org.springframework.security.intercept.web.FilterSecurityInterceptor" autowire="byType">
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" />
        <beans:property name="objectDefinitionSource" ref="filterInvocationDefinitionSource" />
    </beans:bean>

    <beans:bean id="filterInvocationDefinitionSource"
        class="hn.travel.persist.security.service.proxy.JdbcFilterInvocationDefinitionSourceFactoryBean">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="resourceQuery" value="SELECT A.RES_STR,R.NAME FROM SYS_ROLE R JOIN SYS_ROLE_RESOURCES RA ON R.ID=RA.ROLEID JOIN SYS_RESOURCES A ON A.ID=RA.RESID ORDER BY A.PRIORITY"/>
    </beans:bean>
    
    <authentication-manager alias="authenticationManager" session-controller-ref="currentController"/>

	<beans:bean id="concurrentSessionFilter" class="org.springframework.security.concurrent.ConcurrentSessionFilter">
	    <custom-filter position="CONCURRENT_SESSION_FILTER" />
	    <beans:property name="sessionRegistry" ref="sessionRegistry"/>
	</beans:bean>
	
	<beans:bean id="sessionRegistry" class="hn.travel.persist.security.service.proxy.SmartSessionRegistry"/>
	
	<beans:bean id="currentController" class="hn.travel.persist.security.service.proxy.SmartConcurrentSessionController">
	    <beans:property name="sessionRegistry" ref="sessionRegistry"/>
	    <beans:property name="exceptionIfMaximumExceeded" value="true"/>
	</beans:bean>
    
    <beans:bean id="loggerListener" class="org.springframework.security.event.authentication.LoggerListener"/>
    
</beans:beans>
